# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 20  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.50, 1024] # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.33, 0.50, 1024]  # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [0.33, 0.50, 1024] # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs55
  x: [0.33, 0.50, 1024]  # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, MFIAM, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, MFIAM, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, MFIAM, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
  - [-1, 3, MFIAM, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 9

# YOLOv8.0n head
head:
  - [ -1, 1, nn.Upsample, [ None, 2, "nearest" ] ] #10
  - [-1, 1, nn.Conv2d, [512, 1]] # 11

  - [4, 1, Conv, [256, 3, 2]] # 12
  - [12, 1, nn.Conv2d, [512, 1]] # 13

  - [[13, 6, 11], 1, MFAAM, [512]] # 14

  - [14, 3, DEM, [512]]  # 15

  - [15, 1, Conv, [256, 3, 2]] # 16
  - [[-1, 9], 1, Concat, [1]]   #17
  - [-1, 3, DEM, [512]]  # 18

  - [15, 1, nn.Upsample, [None, 2, 'nearest']] # 19
  - [[-1, 4], 1, Concat, [1]]  #20
  - [-1, 3, DEM, [256]]  # 21

  - [ 18, 1, nn.Upsample, [ None, 2, "nearest" ] ] #22
  - [-1, 1, nn.Conv2d, [512, 1]] # 23

  - [21, 1, Conv, [256, 3, 2]] # 24
  - [-1, 1, nn.Conv2d, [512, 1]] # 25

  - [[23, 15, 25], 1, MFAAM, [512]] # 26

  - [26, 1, Conv, [256, 3, 2]] # 27
  - [[27, 18], 1, Concat, [1]]# 28
  - [-1, 1, nn.Conv2d, [512, 1]] # 29

  - [26, 1, nn.Upsample, [None, 2, 'nearest']] # 30
  - [[30, 21], 1, Concat, [1]]  # 31
  - [-1, 1, nn.Conv2d, [256, 1]] # 32

  - [[29, 32, 26], 1, Detect, [nc]]  # Detect(P3, P4, P5)